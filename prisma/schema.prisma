generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  // Link to Alumni record
  alumniId      String?   @unique
  alumni        Alumni?   @relation(fields: [alumniId], references: [id])

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Alumni {
  id          String   @id @default(cuid())
  name        String?  
  email       String   @unique
  phone       String?
  graduationYear Int?  
  degree      String?  
  department  String?  
  currentJob  String?
  company     String?
  location    String?
  linkedinUrl String?
  bio         String?
  profilePicture String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Link to User record
  user        User?

  @@map("alumni")
}

model Admin {
  id          String   @id @default(cuid())
  username       String   @unique
  password       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("admin")
}
