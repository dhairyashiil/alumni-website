# Database
# For Neon, replace with your Neon connection string:
# DATABASE_URL="postgresql://username:password@ep-xxx.us-east-2.aws.neon.tech/alumni_db?sslmode=require"

DATABASE_URL="postgresql://username:password@localhost:5432/alumni_db?schema=public"

## Google OAuth Setup
### 1. Create Google OAuth Application
# 1. Go to the [Google Cloud Console](https://console.cloud.google.com/)
# 2. Create a new project or select an existing one
# 3. Enable the Google+ API and Google OAuth2 API
# 4. Go to "Credentials" → "Create Credentials" → "OAuth 2.0 Client IDs"
# 5. Configure the OAuth consent screen:
#    - Add your application name
#    - Add authorized domains
# 6. Create OAuth 2.0 Client ID:
#    - Application type: Web application
#    - Authorized JavaScript origins: `http://localhost:3000` (for development)
#    - Authorized redirect URIs: `http://localhost:3000/api/auth/callback/google`
# 7. Copy your Client ID and Client Secret
GOOGLE_CLIENT_ID=''
GOOGLE_CLIENT_SECRET=''

# NextAuth Configuration
# Generate NextAuth Secret: Generate a random secret, use command in terminal 'openssl rand -base64 32'
NEXTAUTH_SECRET = ''
NEXTAUTH_URL = '' 
#for development 'http://localhost:3000'

# Generate JWT_SECRET : Generate a random secret, use command in terminal 'openssl rand -base64 32'
JWT_SECRET=''

ADMIN_USERNAME=''
ADMIN_PASSWORD=''